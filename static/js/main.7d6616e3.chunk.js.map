{"version":3,"sources":["constants/constants.js","reducers/data.js","reducers/ids.js","App.js","reportWebVitals.js","index.js"],"names":["ALPHABET","MONTH_NAMES","SET_DATA","SELECTED_ID","App","data","useSelector","state","selectedId","ids","dispatch","useDispatch","getData","a","axios","get","response","type","payload","console","log","message","useEffect","checkedUsers","filter","id","includes","groupedUsersByMonth","map","elem","index","dob","Date","getMonth","className","letter","users","lastName","length","firstName","checked","onChange","value","getCheckId","target","monthByIndex","monthName","find","birthday","getDate","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","reducers","combineReducers","action","persistedReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.7d6616e3.chunk.js","sourcesContent":["export const ALPHABET = [\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n];\nexport const MONTH_NAMES = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n];\n","export const SET_DATA = 'SET_DATA'\n\nexport default (state = [], action) => {\n    if(action.type === SET_DATA){\n       return [...action.payload]\n    }\n    return state\n}","export const SELECTED_ID = 'SELECTED_ID'\n\nexport default (state = [], action) => {\n    if(action.type === SELECTED_ID){\n        const {checked, id} = action.payload;\n        return  checked ? [...state, id] : state.filter((elem) => elem !== id)\n    }\n    return state\n}","import './App.css';\nimport axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { ALPHABET, MONTH_NAMES } from './constants/constants';\nimport {SET_DATA} from './reducers/data'\nimport {SELECTED_ID} from './reducers/ids'\nimport { useSelector,  useDispatch } from 'react-redux'\n\nfunction App() {\n    const data = useSelector(state => state.data)\n    const selectedId = useSelector(state => state.ids)\n    const dispatch = useDispatch()\n\n    const getData = async () => {\n        try {\n            const response = await axios.get(\n                \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\n            );\n            dispatch({ type: SET_DATA, payload: response.data})\n        } catch (e) {\n            console.log(e.message);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    const checkedUsers = data.filter(({ id }) => selectedId.includes(id));\n\n    const groupedUsersByMonth = MONTH_NAMES.map((elem, index) =>\n        checkedUsers.filter(({ dob }) => index === new Date(dob).getMonth())\n    );\n\n    const getCheckId = (checked, id) =>{\n        dispatch({ type: SELECTED_ID, payload: {checked, id}})\n    }\n\n    return (\n        <div className=\"usersListCover\">\n            <div>\n                <h2>Employees</h2>\n                <div className=\"usersList\">\n                    {ALPHABET.map((letter, index) => {\n                        const users = data\n                            ? data.filter(({ lastName }) => lastName[0] === letter)\n                            : [];\n                        return (\n                            <div className=\"alphabet\" key={index}>\n                                <h3>{letter}</h3>\n                                {users.length > 0 ? (\n                                    users.map(({ lastName, firstName, id }) => (\n                                        <div className=\"usersName\" key={id}>\n                                            <p>{`${lastName} ${firstName}`} </p>\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedId.includes(id)}\n                                                onChange={(value) => {\n                                                    getCheckId(value.target.checked, id);\n                                                }}\n                                            />\n                                        </div>\n                                    ))\n                                ) : (\n                                    <p>----</p>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n\n            <div className=\"birthdayListCover\">\n                <h2 className=\"titleOfBirthdayList\"> Employees birthday</h2>\n                {selectedId.length > 0 ? (\n                    groupedUsersByMonth.map((elem, monthByIndex) => {\n                        const monthName = MONTH_NAMES.find(\n                            (elem, index) => index === monthByIndex\n                        );\n                        return (\n                            <div key={monthByIndex}>\n                                {elem.length > 0 && <p>{monthName}</p>}\n                                {elem.map(({ lastName, firstName, dob, id }) => {\n                                    const birthday = new Date(dob);\n                                    return (\n                                        <div key={id}>\n                                            <ul>\n                                                <li>\n                                                    {`${lastName} ${firstName} - ${birthday.getDate()} ${monthName} ${birthday.getFullYear()} year`}\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        );\n                    })\n                ) : (\n                    <p>No selected employees</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {createStore, combineReducers } from 'redux'\nimport data from './reducers/data'\nimport ids from './reducers/ids'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst reducers = combineReducers({data, ids})\nconst persistedReducer = persistReducer(persistConfig, reducers)\nconst store =\n    createStore(persistedReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst persistor = persistStore(store)\n\nReactDOM.render(\n<React.StrictMode>\n   <Provider store={store}>\n       <PersistGate loading={null} persistor={persistor}>\n          <App />\n      </PersistGate>\n    </Provider>\n   </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}